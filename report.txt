TensorFlow 2.0 Upgrade Script
-----------------------------
Converted 9 files
Detected 2 issues that require attention
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
File: audio_to_multiple_pose_gan\model.py
--------------------------------------------------------------------------------
audio_to_multiple_pose_gan\model.py:186:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
audio_to_multiple_pose_gan\model.py:191:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
================================================================================
Detailed log follows:

================================================================================
================================================================================
Input tree: 'audio_to_multiple_pose_gan'
================================================================================
--------------------------------------------------------------------------------
Processing file 'audio_to_multiple_pose_gan\\config.py'
 outputting to 'audio_to_multiple_pose_gan_v2\\config.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'audio_to_multiple_pose_gan\\dataset.py'
 outputting to 'audio_to_multiple_pose_gan_v2\\dataset.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'audio_to_multiple_pose_gan\\model.py'
 outputting to 'audio_to_multiple_pose_gan_v2\\model.py'
--------------------------------------------------------------------------------

57:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
57:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
63:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
63:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
67:26: INFO: Added keywords to args of function 'tf.convert_to_tensor'
94:26: INFO: tf.losses.mean_squared_error requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
94:26: INFO: Renamed 'tf.losses.mean_squared_error' to 'tf.compat.v1.losses.mean_squared_error'
95:44: INFO: tf.losses.mean_squared_error requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
95:44: INFO: Renamed 'tf.losses.mean_squared_error' to 'tf.compat.v1.losses.mean_squared_error'
97:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
97:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
100:30: INFO: tf.losses.mean_squared_error requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
100:30: INFO: Renamed 'tf.losses.mean_squared_error' to 'tf.compat.v1.losses.mean_squared_error'
101:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
101:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
104:41: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
104:59: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
105:31: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
106:56: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
111:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
111:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
115:34: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
116:41: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
116:59: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
117:31: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
145:22: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
152:22: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
152:22: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
152:39: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
154:26: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
154:26: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
154:43: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
156:17: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
156:17: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
168:22: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
169:16: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
172:22: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
173:16: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
186:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
186:16: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
191:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
191:16: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
228:25: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
229:8: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'audio_to_multiple_pose_gan\\predict_audio.py'
 outputting to 'audio_to_multiple_pose_gan_v2\\predict_audio.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "C:\Users\carolyns\AppData\Roaming\Python\Python37\site-packages\tensorflow\tools\compatibility\ast_edits.py", line 940, in update_string_pasta
    t = pasta.parse(text)
  File "C:\Users\carolyns\AppData\Roaming\Python\Python37\site-packages\pasta\__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "C:\Users\carolyns\AppData\Roaming\Python\Python37\site-packages\pasta\base\ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "c:\program files\python37\lib\ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  File "<unknown>", line 32
    print "No checkpoint provided."
                                  ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print("No checkpoint provided.")?

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'audio_to_multiple_pose_gan\\predict_to_videos.py'
 outputting to 'audio_to_multiple_pose_gan_v2\\predict_to_videos.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "C:\Users\carolyns\AppData\Roaming\Python\Python37\site-packages\tensorflow\tools\compatibility\ast_edits.py", line 940, in update_string_pasta
    t = pasta.parse(text)
  File "C:\Users\carolyns\AppData\Roaming\Python\Python37\site-packages\pasta\__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "C:\Users\carolyns\AppData\Roaming\Python\Python37\site-packages\pasta\base\ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "c:\program files\python37\lib\ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  File "<unknown>", line 24
    print "No checkpoint provided."
                                  ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print("No checkpoint provided.")?

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'audio_to_multiple_pose_gan\\static_model_factory.py'
 outputting to 'audio_to_multiple_pose_gan_v2\\static_model_factory.py'
--------------------------------------------------------------------------------

20:29: INFO: Added keywords to args of function 'tf.shape'
40:50: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
40:50: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
54:50: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
54:50: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
135:53: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
135:53: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
228:95: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
228:95: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'audio_to_multiple_pose_gan\\tf_layers.py'
 outputting to 'audio_to_multiple_pose_gan_v2\\tf_layers.py'
--------------------------------------------------------------------------------

13:34: INFO: Added keywords to args of function 'tf.shape'
15:43: INFO: Added keywords to args of function 'tf.shape'
25:11: INFO: Added keywords to args of function 'tf.reduce_mean'
25:36: INFO: Renamed 'tf.layers.flatten' to 'tf.compat.v1.layers.flatten'
25:69: INFO: Renamed 'tf.layers.flatten' to 'tf.compat.v1.layers.flatten'
32:12: INFO: Added keywords to args of function 'tf.transpose'
36:20: INFO: Added keywords to args of function 'tf.nn.moments'
36:20: INFO: Renamed keyword argument for tf.nn.moments from keep_dims to keepdims
46:17: INFO: Added keywords to args of function 'tf.transpose'
49:12: INFO: Added keywords to args of function 'tf.transpose'
53:20: INFO: Added keywords to args of function 'tf.nn.moments'
53:20: INFO: Renamed keyword argument for tf.nn.moments from keep_dims to keepdims
63:17: INFO: Added keywords to args of function 'tf.transpose'
101:49: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
101:49: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
105:49: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
105:49: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'audio_to_multiple_pose_gan\\train.py'
 outputting to 'audio_to_multiple_pose_gan_v2\\train.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'audio_to_multiple_pose_gan\\__init__.py'
 outputting to 'audio_to_multiple_pose_gan_v2\\__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

